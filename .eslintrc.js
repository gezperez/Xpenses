const { peerDependencies } = require('./package.json');

module.exports = {
  root: true,
  extends: ['prettier'],
  plugins: ['import', 'react-native', 'simple-import-sort'],
  settings: {
    react: {
      version: '18.2.0',
    },
    'import/ignore': ['react-native'],
    'import/resolver': {
      node: {
        extensions: ['.js', '.jsx', '.ts', '.tsx', '.json'],
      },
    },
  },
  rules: {
    'consistent-return': ['error'],
    curly: ['error', 'all'],
    'import/named': ['error'],
    'import/no-cycle': ['warn'],
    'import/no-duplicates': ['error'],
    'import/no-named-as-default': ['error'],
    'import/order': 'off',
    'lines-between-class-members': ['error'],
    'no-console': ['error'],
    'no-else-return': ['error'],
    'no-lonely-if': ['error'],
    'no-nested-ternary': ['error'],
    'no-param-reassign': ['warn'],
    'no-restricted-syntax': ['warn'],
    'no-unused-expressions': ['error'],
    'no-unused-vars': ['warn'],
    'object-shorthand': ['error'],
    'padding-line-between-statements': [
      'error',
      { blankLine: 'always', prev: '*', next: 'return' },
      { blankLine: 'always', prev: '*', next: 'function' },
    ],
    'prefer-const': ['error'],
    'prefer-template': ['error'],
    'react/no-array-index-key': ['warn'],
    'react/jsx-boolean-value': ['error'],
    'react/jsx-wrap-multilines': ['error'],
    'react-native/no-color-literals': ['error'],
    'sort-imports': 'off',
    'simple-import-sort/imports': [
      'error',
      {
        groups: [
          [
            `^(${require('module').builtinModules.join('|')})(/|$)`,
            '^react',
            '^@?\\w',
            '^(@)(/.*|$)',
            '^~/',
            '^\\.\\.(?!/?$)',
            '^\\.\\./?$',
            '^\\./(?=.*/)(?!/?$)',
            '^\\.(?!/?$)',
            '^\\./?$',
            '^\\u0000',
          ],
        ],
      },
    ],
    'no-case-declarations': 'off',
  },
  overrides: [
    {
      files: ['**/*.+(ts|tsx)'],
      plugins: ['react', 'react-hooks', '@typescript-eslint'],
      extends: [
        'eslint:recommended',
        'plugin:import/typescript',
        'prettier',
        'plugin:@typescript-eslint/eslint-recommended',
        'plugin:@typescript-eslint/recommended',
        'plugin:@typescript-eslint/recommended-requiring-type-checking',
      ],
      parser: '@typescript-eslint/parser',
      parserOptions: {
        project: './tsconfig.json',
      },
      rules: {
        '@typescript-eslint/no-unused-vars': 'warn',
        '@typescript-eslint/ban-ts-comment': 'warn',
        'no-empty': 'warn',
        '@typescript-eslint/ban-types': 'warn',
        '@typescript-eslint/no-use-before-define': 'warn',
        '@typescript-eslint/no-inferrable-types': 'warn',
        '@typescript-eslint/no-unused-expressions': 'warn',
        '@typescript-eslint/default-param-last': 'warn',
        '@typescript-eslint/no-empty-interface': 'warn',
        'import/no-cycle': 'off',
        'react/default-props-match-prop-types': 'warn',
        '@typescript-eslint/unbound-method': 'warn',
        '@typescript-eslint/restrict-plus-operands': 'warn',
        'react/no-unused-prop-types': 'warn',
        '@typescript-eslint/no-for-in-array': 'warn',
        '@typescript-eslint/no-unsafe-call': 'warn',
        '@typescript-eslint/restrict-template-expressions': 'warn',
        'react/no-array-index-key': 'warn',
        '@typescript-eslint/no-unsafe-argument': 'warn',
        '@typescript-eslint/no-floating-promises': 'warn',
        '@typescript-eslint/require-await': 'warn',
        'react/require-default-props': 'off',
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/no-unsafe-member-access': 'off',
        '@typescript-eslint/no-unsafe-return': 'off',
        '@typescript-eslint/await-thenable': 'off',
        'no-await-in-loop': 'off',
        'react/function-component-definition': 'off',
        '@typescript-eslint/no-dupe-class-members': 'off',
        'no-unsafe-optional-chaining': 'warn',
        'no-useless-return': 'warn',
        '@typescript-eslint/naming-convention': 'off',
        'no-case-declarations': 'off',
        '@typescript-eslint/no-empty-function': 'warn',
        '@typescript-eslint/no-namespace': 'off',
        'no-var': 'off',
        '@typescript-eslint/no-misused-promises': 'off',
      },
    },
  ],
};
